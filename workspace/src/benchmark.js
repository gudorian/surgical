import SurgicalDeclarativeComponent from '../../packages/surgical/SurgicalDeclarativeComponent';
import SurgicalDeclarativeCloneComponent from '../../packages/surgical-experimental/SurgicalDeclarativeCloneComponent';
import SurgicalIdentityComponent from '../../packages/surgical/SurgicalIdentityComponent';

import SurgicalElement from '../../packages/surgical/SurgicalElement';
import SurgicalBaseElement from '../../packages/surgical/SurgicalBaseElement';
import SurgicalText from '../../packages/surgical/SurgicalText';
import SurgicalForeignNode from '../../packages/surgical/SurgicalForeignNode';
import SurgicalPrearrangedContent from '../../packages/surgical/SurgicalPrearrangedContent';

import SurgicalReorderableMoveDownContent from '../../packages/surgical/SurgicalReorderableMoveDownContent';

import SurgicalSVGNSElement from '../../packages/surgical/SurgicalSVGNSElement';

import {declare as declare,
        declareWithKey,
        declareContent,
        declareContentWithKey} from '../../packages/surgical/declare.js';


let randomIndex = 0;
let randomValues = [0.9163392516166431,0.9715667217155128,0.7076699460026452,0.3497477652703167,0.30443652424576495,0.3375941964518656,0.19331719270232828,0.9211400829233625,0.1287914854440313,0.27830027884144304,0.18709290630786968,0.17787782718625844,0.7310187543156854,0.06462305857847417,0.4055119335205619,0.7103540461998865,0.3755148583633334,0.8144200242940629,0.9389294964074084,0.6303870061639798,0.1286142543815032,0.6876031545669987,0.9029434492552539,0.5520470843437362,0.24292930055582596,0.39181182438608664,0.7378552676976979,0.9102591797546205,0.06143620841140662,0.5812956598246184,0.4181207957933555,0.6033468099056456,0.041654568167879935,0.3340224180414282,0.10450241713084507,0.0005021966088034624,0.6065299901150201,0.10155540632097981,0.4387068832088994,0.040782505483986764,0.5582402904309616,0.3160821473702087,0.4765540266953765,0.7984087055439162,0.7796439745457766,0.08131946137422985,0.4097467507264645,0.5345488871967949,0.715551788775191,0.12684368073397345,0.031224893206027726,0.5310317709297523,0.19394950051586024,0.2915157506139696,0.5452789540902561,0.03363373616954801,0.4255533315867073,0.007683352502692475,0.4172611444993197,0.361583344800553,0.5463468559647056,0.7896027096268246,0.2449249032841847,0.8336703900349092,0.7559918335560722,0.8992222587373389,0.6561968901113586,0.6520109047234643,0.35034516312368913,0.2810345703878496,0.5737738462821398,0.08952818267258489,0.3800817591907164,0.2632578582225962,0.5657669218654258,0.21587195015947902,0.048038410034217494,0.9744671406999452,0.3808204637259389,0.7709743840625729,0.6566546257087251,0.4493423039572595,0.5811003119731453,0.8059835830797748,0.8856351710739185,0.20515801085558527,0.5781221704428643,0.07140094963047727,0.02125958889103874,0.16658863967554094,0.5083147686099712,0.4960219671163848,0.9034874533881523,0.9502714012298943,0.536007226500316,0.18285758517220696,0.1969065510375554,0.636504995071983,0.36589027284871944,0.108294770749497,0.1035094714425151,0.17209462096361583,0.5468299992334344,0.2935266432252508,0.12131433115989876,0.08292102481783425,0.8231373307244638,0.6121414762516191,0.4150634571509797,0.879411473029627,0.5867444444137944,0.3900143683133428,0.016612085751532835,0.0944778363590919,0.19870057379402084,0.4567722877648357,0.7877278761238389,0.13020363886149577,0.6455246764208731,0.9618905281734922,0.6786194780892858,0.8730282498588902,0.1189322273902742,0.718945954026482,0.4529456332327251,0.8141512916300557,0.2525461435946621,0.4626134616863873,0.5209049966003609,0.2619986373607892,0.4305380381214001,0.37788771420077105,0.2109148771352316,0.11655387983828658,0.815771264577684,0.9563956569970642,0.22423385540109608,0.3886802038774939,0.99693916058529,0.6400960670022351,0.10175890088487982,0.7583212001749262,0.23070972452784821,0.13810850892477222,0.3825292323185061,0.2036906210267455,0.08269831286727758,0.46133394040553943,0.6559328787076211,0.5415249156770783,0.05761859586027862,0.25390614650329746,0.9720148684144967,0.9334997808287793,0.8069156068768593,0.4973137290136751,0.46504559458704997,0.326060841759493,0.19058630275705069,0.8599977489235897,0.29715009175291685,0.1271798235112418,0.890873660435582,0.8820522583800368,0.4655571650050778,0.2961994792475988,0.25365476897420103,0.7684329369933849,0.752827553232231,0.5126809453999654,0.07547815933999424,0.5506058978725945,0.5929416279314197,0.05042016674516869,0.19379923229216756,0.8514346832465773,0.011411008740418227,0.30208526359842436,0.915653510359967,0.2273442393089844,0.2846214400294167,0.3005547803361417,0.9379104501914255,0.7049952825109482,0.002077251579406747,0.4214782567021189,0.9593550651665139,0.8543095221356396,0.5827446945579537,0.5204637449139145,0.06906412911718962,0.6912857121637346,0.8985604901664057,0.8594508888659975,0.9937290008272026,0.5283525763042196,0.10956935074074137,0.927030842847079,0.2689716437169407,0.8952255763600487,0.17389603169499113,0.9951972242057003,0.6224222399410251,0.5311701411570882,0.45605678005813677,0.8939611846836415,0.5226541855552114,0.27874546125269495,0.6581404388665657,0.7411159723215985,0.2475214436106863,0.10327230898511908,0.3580996382981141,0.48012575185876716,0.3694529258923631,0.20506944610178213,0.48702870330700154,0.562287045576702,0.1910797212762092,0.19597382141702324,0.8216867878770477,0.41911766907232884,0.011168114939032137,0.40655652554327637,0.312322134961845,0.879222395517055,0.007850029617998633,0.7640967863069852,0.4284676100301674,0.21216196725014735,0.970789946739302,0.9958052310005816,0.00136447289574404,0.7967088484842018,0.38953966905208715,0.10435336629476577,0.3040270007721988,0.24725579968276445,0.693839641329314,0.2771280614449443,0.4840792322213243,0.1408336241265895,0.4760076916650786,0.9028981424564897,0.4380642187340562,0.6791899379274018,0.9057628757500933,0.9020691726450172,0.47240072450035386,0.27574494167597874,0.8077616666525518,0.8045368582725532,0.6452486780344908,0.26103504491499385,0.8822710169413583,0.3033078083517049,0.15984203331256164,0.7198636397893385,0.5566015269553817,0.21014650432814364,0.8616478883783911,0.9972283741893366,0.14424776787201843,0.20753587333185997,0.653256102251528,0.8184698097479453,0.5800047181565473,0.3591094508211681,0.029708654538952883,0.25090176602878067,0.8069150968673426,0.1253523044579139,0.943377033482454,0.7895945437200362,0.5564954643477953,0.7102273758675404,0.1975681129079565,0.22706744138107693,0.8005319597488159,0.07966722227271039,0.12083288561796168,0.32756009281374343,0.17830896294208154,0.14315935254996037,0.9222666383731692,0.061541342355516226,0.7628767936358001,0.25763565750313333,0.7910614252868631,0.5934753326061761,0.7341637785509274,0.9837991997505025,0.5319610565421566,0.2777078562256454,0.4713095219370025,0.47772845869195835,0.4268093622725373,0.2014591397814547,0.8549185945213307,0.07806364559276902,0.9171432480291764,0.2938964132523598,0.12544426371069228,0.8237915083078029,0.8449409109685873,0.037504082235034764,0.25329364287046596,0.5437049085529007,0.8087825271211009,0.008595435690747388,0.7075328230986575,0.22939164660098865,0.36774703720195334,0.51945464297943,0.4877569188854938,0.8379875589891557,0.9831903723392748,0.5834248723189228,0.6223240921053292,0.5151975804197708,0.5102384838685377,0.017513278977261182,0.5765676588770772,0.6337329362496609,0.32571303466279256,0.6680162066095625,0.5980778034367311,0.30737356977725816,0.29802406117195024,0.018311257293498917,0.9719372564028141,0.3897889319906964,0.7561204233726144,0.5052575273273254,0.13861699100034408,0.535326620328171,0.3218998825399588,0.5777107228628855,0.7728300732273681,0.37715176521548766,0.9650347451333021,0.8175375003822714,0.3536109356241006,0.5390088551312928,0.39441974854049655,0.45422119904814084,0.3522500764726968,0.694781098915104,0.6417348799668392,0.6763682068475982,0.38433900786667463,0.8691603278516349,0.9917054738322766,0.5175028550483949,0.7122224351875655,0.0772007907644301,0.28186534804333596,0.8589643135137635,0.6023857639217631,0.3583671569861999,0.7646960031985992,0.5633207360331818,0.11091051152102582,0.47432888735781553,0.7472170144422394,0.8130493692667533,0.975124954030832,0.6145965543311929,0.4708900650194128,0.027549292072085008,0.3878834538116547,0.46382844364076914,0.26949437930333,0.5977350100318539,0.116095336411139,0.3012471741318343,0.9928309688038184,0.8765334860456984,0.4548172550038465,0.8088942585960577,0.7975268892515579,0.41457558737400024,0.9267958656917661,0.9572212019874973,0.30498907050687607,0.6950554712223933,0.7630366816598473,0.6510573494232896,0.9131346936816307,0.2911866959175935,0.9237060483153299,0.9538358245922234,0.036087871754046486,0.863142375470833,0.7656497140327572,0.7011612312735831,0.806022989393963,0.3213970618570301,0.3571436014211198,0.7321558694531671,0.8642860084360426,0.48258768063911983,0.8152295349023628,0.048569015096263435,0.5805692591068556,0.2838603580763317,0.6902308465193501,0.22122571687213677,0.8644277250757888,0.8026739855380107,0.13069800211693328,0.031605190033936914,0.6584463420385487,0.9731809301888537,0.4284810820560798,0.7766257294691576,0.11440119100186585,0.3568797126216283,0.07840309521511779,0.7748801693521821,0.6425343826910934,0.47291489377175155,0.337119164629726,0.30126897455035784,0.1114409239182006,0.5841500437065643,0.7172512132362823,0.5685432636477235,0.15204653826406922,0.678270705954191,0.0891810120349672,0.43396568612055675,0.06475380471861936,0.8355943312997616,0.7700859294069937,0.5680969787781633,0.44687765532639223,0.7775118913389729,0.9519450520976187,0.04255129402894475,0.17875839955215644,0.4898230582568872,0.18033685031016455,0.31031067743960783,0.8049758584278999,0.968367044068269,0.3314071795498299,0.10995957339251117,0.7158934982645382,0.5644729060974865,0.7059207903497373,0.2667414375696786,0.8665768712003203,0.5720828808026504,0.8564766849917513,0.6964497077624034,0.9509211039952006,0.4181847354475514,0.7238318756070012,0.148851414686622,0.5474554761059027,0.9197997514545693,0.19272841020124676,0.48254813907271976,0.08837555336736602,0.26736503333667416,0.5993341886670698,0.9053033228535983,0.39314056664232844,0.1259034706386677,0.3045299883345334,0.014900779536701991,0.7514071422321948,0.7065248605229,0.3331757357870009,0.39122453535244417,0.06522881803271852,0.6156936772122927,0.46301160324509727,0.7164887335798569,0.9630319733353794,0.17346324302079186,0.468626054184903,0.4993263109725157,0.55266982294395,0.18622048232096455,0.0033238100511907565,0.7333132139209666,0.6166378443365943,0.7791156596470268,0.88743182346334,0.13874864119783004,0.34423960980320345,0.053572991691990035,0.2003444903178797,0.9582005191179646,0.7459666717888813,0.1837321088860968,0.11477586534722728,0.050861970569288095,0.1006442500475,0.9550339034497328,0.8076568904662846,0.4880845078882723,0.5479105854523654,0.25934491152465977,0.6137406918519699,0.24652562909357356,0.4078593486758766,0.2887286983901298,0.566899084782891,0.4711836798917477,0.4556774239045305,0.37806041064622287,0.1740569758649686,0.525758122557713,0.21931733104808138,0.6751316758565833,0.6846019341090657,0.3323282763392945,0.24565728908699147,0.3837842377141538,0.7099257301104973,0.8286984549908829,0.27411616208146183,0.10675354581408869,0.9006551667565574,0.10454044712099608,0.24271402513995932,0.8755137044755346,0.17448371262528162,0.16305546633419077,0.584030684570007,0.3960745301144155,0.6219020124664942,0.9925644046131437,0.517185787708113,0.621588929356995,0.021946082199996608,0.9641156877613122,0.3521494308904485,0.3239433845394504,0.39964681553441395,0.31350627638449313,0.6321684934777281,0.6929759244427638,0.3427168460944643,0.34525653303519377,0.3742282821677718,0.024911169003259737,0.11101359552104273,0.8400990653652753,0.423730514349844,0.49045599587048705,0.911452429003694,0.19549171939109122,0.7536215399923347,0.38779332620562323,0.05292971165593596,0.26002175962437857,0.37077764842469785,0.773554426936258,0.8968839084476228,0.9621119624444594,0.7390056006990511,0.8180231409746461,0.6400563193565274,0.9593747963437069,0.25344847527769043,0.835984044508558,0.6876958741284869,0.32920962853287805,0.8861390036931012,0.5345261084523547,0.5108010901295921,0.4955386393725265,0.8425523201061198,0.8495104922194123,0.5948720680178257,0.8982695081918057,0.3827184511412891,0.9612173445235659,0.03775339947462686,0.5611384684729843,0.8212946441022655,0.8950541574842128,0.3105828997042124,0.28472120947531177,0.6127702894695861,0.011919662169900258,0.08960930474776041,0.2636702875351844,0.5084620914311999,0.6375702126260263,0.8475037549694937,0.44224699809522994,0.9977246046556589,0.4698606842111388,0.306744733390361,0.14713720349480575,0.6351825339806656,0.4725422862426796,0.2579774458056123,0.7815632833950703,0.8879274902556265,0.9673895069459453,0.8669940475907298,0.2117297900588231,0.3710993586245974,0.8870469044564147,0.34698657086435647,0.856320447010223,0.7793469922628129,0.6250945542077957,0.8686230451080925,0.4441292067282496,0.6535863893703138,0.7896506893672424,0.3730210274311685,0.5874743429659128,0.9940474948722866,0.7623431272951176,0.09310026757973988,0.5614974758787925,0.31644818877168857,0.5753638523245717,0.04468236172687412,0.9455475172736587,0.41993385588540666,0.5123766845281783,0.8813532846982284,0.8382799340620182,0.13634051796951097,0.4363650859599788,0.41327141308484006,0.49648636532390844,0.7172753057589194,0.3927504030358462,0.018043363629287157,0.060750312845655685,0.39816649389994274,0.27981381792199045,0.9367014217870868,0.5833793783093943,0.20049614050665676,0.6994334509515925,0.20113833991966312,0.9796254070376187,0.20300621480306402,0.7228828064766484,0.5307506966411151,0.4833097588013684,0.2903331048163551,0.6516422760669751,0.23868595241091506,0.04999560480517529,0.9974763621485618,0.7698232147645652,0.12187309363571064,0.41613542469056997,0.5616692051676535,0.4501867112622844,0.6988492994571778,0.25165236034246385,0.13120167580270348,0.8016946087731043,0.8829819306630466,0.6591880976556654,0.06632778752982094,0.09406321718666222,0.2685442847385149,0.4744284398152263,0.44848750168326834,0.46603959577224985,0.9665265016080054,0.19689854441245735,0.42253281568547063,0.47826054767426207,0.23244867445854167,0.8018002411826699,0.028356494727948434,0.2452250764534214,0.3892243305241816,0.35467848068496655,0.7681595035153892,0.800334981685457,0.7080219051028029,0.38352602521872625,0.3002688435715535,0.564098524007836,0.0804306617489392,0.9520934454615286,0.795581632929633,0.025149041315956078,0.31868077749796697,0.7287621736622134,0.16495660078857965,0.24208142701160185,0.979271839870576,0.24947554040691822,0.662012291545881,0.6503744412376233,0.4230518870177733,0.22920722218529122,0.3778874175471325,0.3242670337853022,0.791836935468279,0.9659575817284665,0.2633806250785029,0.6400285767600196,0.5329117956682663,0.9967957217231056,0.731053443302248,0.8951697980430802,0.19263877260527318,0.8634391458483288,0.04128138652454494,0.4158491769433563,0.7346842142673642,0.03470799724771201,0.12918058918576714,0.5331351221490892,0.06954637652032747,0.8824429868202177,0.8280739801644046,0.43673533362832306,0.5208898617380335,0.2226416930243864,0.5017851363156225,0.05880167687187554,0.9338355795021374,0.42989391511302877,0.28338858037356274,0.5854230786767844,0.03330608959948167,0.7047031200333689,0.4164560707672902,0.24906332350820315,0.7623340572474537,0.39246006242704645,0.6133689894846042,0.17853203834899012,0.7389158834818725,0.8683945174410568,0.1354767062351272,0.8920623794431748,0.2438617359885331,0.082950448673204,0.7877616680991066,0.5672988461626471,0.6016326338086901,0.0746675790979816,0.06835919942842028,0.9919700616843725,0.8814920249661049,0.911054376878901,0.02562069803504685,0.09267759491326832,0.6765515071321029,0.7066289945579949,0.03756654880226118,0.760605866050212,0.46535476987289637,0.22498816569603575,0.03321287363165659,0.8819577592287027,0.148947083265768,0.2292850050622457,0.13946128649167622,0.1927392227650513,0.5456860695209558,0.46904395751817707,0.9074361322742694,0.65217992154238,0.5750570110745643,0.24749937617757967,0.24701086725135601,0.2837031241693979,0.6392120104921868,0.6029533569671917,0.0963173115171454,0.7754072298644905,0.8012950990098371,0.6925171391290104,0.5511986427858842,0.9976418791982073,0.035931873843398465,0.5642747308730931,0.7581231353740363,0.8102988457606461,0.934185847591958,0.45213587034401237,0.28046002737377496,0.31906896398322115,0.6296410881410399,0.2750460841048312,0.05596781240569637,0.6369337009387144,0.5437823503549295,0.6864722189782215,0.7129470892140051,0.6223208251646097,0.2023853923546639,0.617411145268296,0.5502793928881544,0.6593112063755353,0.8277880790690191,0.24785936599897385,0.8135364557500826,0.7717173336628913,0.23612335143927332,0.36940789482140013,0.30193183409502145,0.8050254453120991,0.9823924925542875,0.2833207707084271,0.2820470330268521,0.7171855833361063,0.7536065809227765,0.6426669837853558,0.4852950697589733,0.3834944313785258,0.5467041239707715,0.1993379477106756,0.004222187945106315,0.7818168438996418,0.8716361338473704,0.4472661527629054,0.2888807571545984,0.018838086452159564,0.22767240818069956,0.24648702469044648,0.5971169304289097,0.4156110358731895,0.3024678683630262,0.3106993958142339,0.6132630744369008,0.17372778243257603,0.9160833688321437,0.511792764595054,0.9196557623395023,0.21640698044004547,0.6777717609716418,0.34295223543124265,0.7510263121316052,0.3189334971868598,0.7379257912024397,0.9681836345905521,0.37160729376388724,0.8875983363083808,0.7848528324688657,0.35063357222304137,0.6028455531327612,0.26877570192423184,0.21381431337463264,0.1205061569874164,0.12876555572085757,0.28574582550415206,0.19481981132650916,0.5906451553320193,0.6997749538141547,0.20506274919126377,0.6446485635492334,0.9072355648682002,0.6854339424225848,0.0901434475091123,0.37202965764076157,0.7790210864426701,0.003765271601513742,0.366794095795987,0.6282382278396337,0.6770444867553014,0.9926291627424808,0.8017007725361727,0.04056677215549609,0.6946412934513002,0.8684643897511439,0.023730983040103126,0.1311591860933441,0.09210801542315017,0.4630060805987901,0.2522551003389708,0.6592521804661695,0.35224770215496504,0.29383684483419903,0.9231747375787227,0.5473408640900428,0.26104417365845345,0.6573964290163758,0.41510090546571,0.9595248370161458,0.9845419610930302,0.8735267107686646,0.3843085168480036,0.09880157093578479,0.1680910508059883,0.9868246797460616,0.13165644226744977,0.9518481295152208,0.4387719816263116,0.848736955430357,0.813806397992157,0.5368554333360824,0.7374842050266293,0.6081138967194779,0.750436413038031,0.5414054525158132,0.13196642579219175,0.01597015373273236,0.6789841858710033,0.818721302711702,0.9127503356823925,0.3075936007942579,0.32844491787806795,0.33694579135723335,0.06251097255245819,0.4796212028249096,0.9328006842625871,0.40768396017922814,0.4088871400469787,0.8652511976912767,0.6763235662894937,0.5413403849610894,0.3523758044019094,0.5294589050107332,0.3317065416021052,0.5533744398694096,0.8454690434931973,0.21949376833391265,0.7035124681837344,0.5753206075554211,0.8193576578390183,0.34580140073408483,0.3840078369854387,0.41394035480077007,0.030736801278244297,0.5249422977055969,0.6406165252162925,0.26564683246990217,0.9430746694020953,0.7287533366081653,0.443198722345326,0.10906056793499741,0.3542100732839202,0.10646353185952573,0.7711207880137603,0.3534944423481656,0.27947670905473876,0.3739680591512924,0.632259187089615,0.9942745929923484,0.004680444611702583,0.05792200043165918,0.9240818195121647,0.28985744126783386,0.16502974037822726,0.04626609651499991,0.39141947229380225,0.5186109716870086,0.6901783399760248,0.6319521387086391,0.6154892279014594,0.5156965562528819,0.14086112610598667,0.08453897390845211,0.117335524269919,0.0772520341832903,0.8169574608930166,0.9017103554804855,0.7363292455732073,0.4058275159409668,0.19885011397979513,0.3212017358539718,0.5280675088257079,0.25465594684060466,0.7539163795041066,0.6862327235964185,0.9719467275524274,0.45629332184856364,0.024154711658487926,0.6830235546789856,0.20103461047605387,0.9904377999209919,0.6107092078961429,0.9380651937556956,0.018625999239117785,0.20683466236444636,0.5319262360663362,0.25850414533569643,0.3969819713743974,0.14342078785543544,0.7235530613127303,0.03537673120741358,0.1521607813711574,0.15043473873694913,0.6902815943704368,0.9940698793177849,0.21949935516703079,0.8718483028525625,0.3140469455930681];
function randomNext() {
  return randomValues[(randomIndex++) % randomValues.length];
}





function gen_native(depth) {
  let count = Math.floor(Math.max(0, 3 - depth / 2) + (Math.max(0, 3 - depth / 2) + Math.max(0, 4 - depth / 2)) * randomNext());

  const value = depth * 32;
  let color = 'rgb(' + (255 - value) + ',' + (255 - value / 2) + ',' + 0 + ')';

  let node = document.createElement('div');

  let style = node.style;
  style.setProperty('font-size', '0');
  style.setProperty('display', 'inline-block');
  style.setProperty('border', '1px solid #000000');
  style.setProperty('margin', '2px');
  style.setProperty('background-color', color);
  style.setProperty('min-height', '10px');
  style.setProperty('min-width', '10px');


  for (let i = 0; i < count; i++) {
    node.appendChild(
      gen_native(depth + 1)
    );
  }

  return node;
}

function gen_surgical(depth) {
  let count = Math.floor(Math.max(0, 3 - depth / 2) + (Math.max(0, 3 - depth / 2) + Math.max(0, 4 - depth / 2)) * randomNext());

  const value = depth * 32;
  let color = 'rgb(' + (255 - value) + ',' + (255 - value / 2) + ',' + 0 + ')';

  let children = [];

  for (let i = 0; i < count; i++) {
    children.push(
      gen_surgical(depth + 1)
    );
  }

  return declare(SurgicalElement, {
    tagName: 'div',
    style: {
      'font-size': '0',
      'display': 'inline-block',
      'border': '1px solid #000000',
      'margin': '2px',
      'background-color': color,
      'min-height': '10px',
      'min-width': '10px',
    },
    children: children
  });
}

function gen_surgical(depth) {
  let count = Math.floor(Math.max(0, 3 - depth / 2) + (Math.max(0, 3 - depth / 2) + Math.max(0, 4 - depth / 2)) * randomNext());

  const value = depth * 32;
  let color = 'rgb(' + (255 - value) + ',' + (255 - value / 2) + ',' + 0 + ')';

  let children = [];

  for (let i = 0; i < count; i++) {
    children.push(
      gen_surgical(depth + 1)
    );
  }

  return declare(SurgicalElement, {
    tagName: 'div',
    style: {
      'font-size': '0',
      'display': 'inline-block',
      'border': '1px solid #000000',
      'margin': '2px',
      'background-color': color,
      'min-height': '10px',
      'min-width': '10px',
    },
    children: children
  });
}

function gen_surgical2(depth) {
  let count = Math.floor(Math.max(0, 3 - depth / 2) + (Math.max(0, 3 - depth / 2) + Math.max(0, 4 - depth / 2)) * randomNext());

  const value = depth * 32;
  let color = 'rgb(' + 0 + ',' + (255 - value) + ',' + (255 - value / 2) + ')';

  let children = [];

  for (let i = 0; i < count; i++) {
    children.push(
      gen_surgical2(depth + 1)
    );
  }

  return declare(SurgicalElement, {
    tagName: 'div',
    style: {
      'font-size': '0',
      'display': 'inline-block',
      'border': '1px solid #000000',
      'margin': '2px',
      'background-color': color,
      'min-height': '5px',
      'min-width': '5px',
    },
    children: children
  });
}



function gen_surgical3(depth) {
  let count = Math.floor(Math.max(0, 3 - depth / 2) + (Math.max(0, 3 - depth / 2) + Math.max(0, 4 - depth / 2)) * randomNext());

  const value = depth * 32;
  let color = 'rgb(' + (255 - value) + ',' + (255 - value / 2) + ',' + 0 + ')';

  let children = [];

  for (let i = 0; i < count; i++) {
    children.push(
      gen_surgical3(depth + 1)
    );
  }

  return declare(SurgicalElement, {
    tagName: 'div',
    style: {
      'font-size': '0',
      'display': 'inline-block',
      'border': '1px solid #000000',
      'background-color': color,
      'min-height': '10px',
      'min-width': '10px',
      'padding': '2px',
    },
    children: children
  });
}

function gen_surgical4(depth) {
  let count = Math.floor(Math.max(0, 3 - depth / 2) + (Math.max(0, 3 - depth / 2) + Math.max(0, 4 - depth / 2)) * randomNext());

  const value = depth * 32;
  let color = 'rgb(' + (255 - value) + ',' + (255 - value / 2) + ',' + 0 + ')';

  let children = [];

  for (let i = 0; i < count; i++) {
    children.push(
      gen_surgical4(depth + 1)
    );
  }

  return declare(SurgicalElement, {
    tagName: 'div',
    style: {
      'padding': '2px',
      'font-size': '0',
      'display': 'inline-block',
      'border': '1px solid #000000',
      'background-color': color,
      'min-height': '10px',
      'min-width': '10px',
    },
    children: children
  });
}




/*
randomIndex = 0;
let native_node = gen_native(1);
document.body.appendChild(native_node);
*/

/*window.benchmark = (rootNode) => {
  let native_node;

  let msSetup = measure('setup', () => {
    randomIndex = 0;
    native_node = gen_native(1);
  });

  return {
    msSetup,
  };
};*/

/*window.benchmark = (rootNode) => {
  let surgical_decl;
  let surgical_instance;

  let msSetup = measure('setup', () => {
    randomIndex = 0;
    surgical_decl = gen_surgical(1);
    surgical_instance = surgical_decl.type.createComponent(document, surgical_decl.data);
  });

  return {
    msSetup,
  };
};*/

window.benchmark = {
  'create': {
    setup(rootNode, env) {
      randomIndex = 0;
      env.decl = gen_surgical(1);
    },
    run(rootNode, env) {
      env.instance = env.decl.type.createComponent(document, env.decl.data);
    },
    teardown(rootNode, env) {
      env.instance.destroy();
    },
  },
  'refresh': {
    setup(rootNode, env) {
      randomIndex = 0;
      env.decl1 = gen_surgical(1);
      env.instance = env.decl1.type.createComponent(document, env.decl1.data);

      randomIndex = 0;
      env.decl2 = gen_surgical(1);
    },
    run(rootNode, env) {
      env.instance.update(env.decl2.data);
    },
    teardown(rootNode, env) {
      env.instance.destroy();
    },
  },
  'update2': {
    setup(rootNode, env) {
      randomIndex = 0;
      env.decl1 = gen_surgical(1);
      env.instance = env.decl1.type.createComponent(document, env.decl1.data);

      randomIndex = 0;
      env.decl2 = gen_surgical2(1);
    },
    run(rootNode, env) {
      env.instance.update(env.decl2.data);
    },
    teardown(rootNode, env) {
      env.instance.destroy();
    },
  },
  'update3': {
    setup(rootNode, env) {
      randomIndex = 0;
      env.decl1 = gen_surgical(1);
      env.instance = env.decl1.type.createComponent(document, env.decl1.data);

      randomIndex = 0;
      env.decl2 = gen_surgical3(1);
    },
    run(rootNode, env) {
      env.instance.update(env.decl2.data);
    },
    teardown(rootNode, env) {
      env.instance.destroy();
    },
  },
  'update4': {
    setup(rootNode, env) {
      randomIndex = 0;
      env.decl1 = gen_surgical(1);
      env.instance = env.decl1.type.createComponent(document, env.decl1.data);

      randomIndex = 0;
      env.decl2 = gen_surgical4(1);
    },
    run(rootNode, env) {
      env.instance.update(env.decl2.data);
    },
    teardown(rootNode, env) {
      env.instance.destroy();
    },
  },
};

import updateNodeChildrenMoveDown from '../../packages/surgical/core/updateNodeChildrenMoveDown';
import updateNodeChildrenStaticallyIndexed from '../../packages/surgical/core/updateNodeChildrenStaticallyIndexed';

if (!window.is_benchmark) {





  let a = document.createElement('button');
  a.innerHTML = 'a';

  let b = document.createElement('button');
  b.innerHTML = 'b';

  let c = document.createElement('button');
  c.innerHTML = 'c';

  let d = document.createElement('button');
  d.innerHTML = 'd';


  let $ = document.createElement('div');


  let lastChildren = [], nextChildren;
  nextChildren = [a,b,c];
  updateNodeChildrenStaticallyIndexed($, nextChildren, lastChildren);
  lastChildren = nextChildren;
  console.log('---');
  nextChildren = [,b,c,a,d];
  updateNodeChildrenStaticallyIndexed($, nextChildren, lastChildren);
  lastChildren = nextChildren;


  document.body.appendChild($);





  let surgical_decl;
  let surgical_instance;

  setTimeout(() => {
    randomIndex = 0;
    surgical_decl = gen_surgical(1);
  }, 0);

  setTimeout(() => {
    surgical_instance = surgical_decl.type.createComponent(document, surgical_decl.data);
    document.body.appendChild(surgical_instance.node);
  }, 500);

  setTimeout(() => {
    randomIndex = 0;
    surgical_decl = gen_surgical(1);
    surgical_instance.update(surgical_decl.data);
  }, 1000);

  setTimeout(() => {
    randomIndex = 0;
    surgical_decl = gen_surgical2(1);
    surgical_instance.update(surgical_decl.data);
  }, 1500);

  setTimeout(() => {
    randomIndex = 0;
    surgical_decl = gen_surgical3(1);
    surgical_instance.update(surgical_decl.data);
  }, 2000);

  setTimeout(() => {
    randomIndex = 0;
    surgical_decl = gen_surgical4(1);
    surgical_instance.update(surgical_decl.data);
  }, 2500);
}
